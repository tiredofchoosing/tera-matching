<%
	const lastUp = data[0]?.lastUpdate || null;
	let time = '';

	if (lastUp) {
		let lastUpDate = new Date(lastUp);
		let timeNow = new Date();
		let diffMs = timeNow - lastUpDate;
		let diffSec = Math.floor(diffMs / 1000);
		let minutes = Math.floor(diffSec / 60);
		let hours = Math.floor(minutes / 60);
		let seconds = diffSec % 60;

		if (hours >= 1) {
			time = hours + strings.lfgLastUpdateHourAgo;
		} else if (minutes >= 1) {
			time = minutes + strings.lfgLastUpdateMinuteAgo;
		} else {
			time = strings.lfgLastUpdateLessThanMinuteAgo;
		}
	}
%>
<%- include('empty.ejs', { isEmpty: Object.values(data).length === 0 }) %>
<div id="lfgList" class="lfg-list">
	<% let id = 1 %>
	<% for (let key in data) {
		if (data[key].hasOwnProperty('messages')) {
			data[key].messages.forEach(msg => { %>
	<details class="lfg-details" data-lfg-id="<%= msg.player?.playerId ?? '0' %>">
		<summary class="lfg-summary">
			<div class="">
				<span class="lfg-message">
					<%= msg.message %>
				</span>
				<span class="lfg-leader-name"><%= msg.leaderName %></span>
			</div>
			<span class="lfg-player-count text-end">
				<%= msg.playerCount %> / <%= msg.maxPlayers %>
			</span>
		</summary>
		<% if (msg.player != null) { %>
		<div class="party-detailed-content overflow-auto">
			<table>
                <tbody>
                    <%- include('party_player_detailed', { player: msg.player }) %>
                </tbody>
			</table>
		</div>
		<% } %>
	</details>
	<% }); } } %>
</div>
<div class="last-update">
	<% if (data['0'] != null) { %>
	<div class="out-update-time">
		<span class="update-text"><%= strings.lfgLastUpdateContent %></span>
		<span class="update-time"><%= time %></span>
	</div>
	<% } %>
	<div class="warning-update">
		<span><%= strings.lfgWarningContent %></span>
	</div>
</div>
</div>